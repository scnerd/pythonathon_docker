version: "3"
services:
  pythonathon:
    build: pythonathon_v3
    image: scnerd/pythonathon_main
    environment:
      # This is for Django, not for the auto proxy
      VIRTUAL_HOST: pythonathon.davidmaxson.name
      DEBUGMODE: 1
      POSTGRES_HOST: db
      POSTGRES_DB: pythonathon
      POSTGRES_PASSWORD_FILE: /secrets/db_password
      JUPYTERHUB_HOST: jupyterhub
      JUPYTERHUB_PORT: 8000
      JUPYTERHUB_PATH: /notebook/
      OAUTH_CALLBACK_URL: http://localhost:8000/notebook/hub/oauth_callback
      OAUTH_CLIENT_ID_PATH: /oauth/oauth_client_id
      OAUTH_CLIENT_SECRET_PATH: /oauth/oauth_client_secret
    volumes:
      - "./secrets:/secrets:ro"
      - "./oauth:/oauth:rw"
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        window: 5s
    networks:
      - ctfnet
    ports:
      - 8000:8000

  db:
    image: postgres:alpine
    environment:
      POSTGRES_MULTIPLE_DATABASES: pythonathon,jupyterhub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /secrets/db_password
      PGDATA: /persistent/postgres/data
    volumes:
      - "./multiple_dbs.sh:/docker-entrypoint-initdb.d/multiple_dbs.sh"
      - "./secrets:/secrets:ro"
      - "./db_data:/persistent/postgres/data"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        window: 5s
    networks:
      - ctfnet

  jupyterhub:
    build: jupyterhub
    image: scnerd/pythonathon_jupyterhub
    networks:
      - ctfnet
      - jupyternet
    environment:
      OAUTH2_USERDATA_URL: http://pythonathon:8000/o/whoami
      OAUTH2_TOKEN_URL: http://pythonathon:8000/o/token/
      OAUTH2_AUTHORIZE_URL: http://localhost:8000/o/authorize/
      OAUTH_CALLBACK_URL: http://localhost:8000/notebook/hub/oauth_callback
      OAUTH_CLIENT_ID_PATH: /oauth/oauth_client_id
      OAUTH_CLIENT_SECRET_PATH: /oauth/oauth_client_secret
      POSTGRES_HOST: db
      POSTGRES_DB: jupyterhub
      POSTGRES_PASSWORD_FILE: /secrets/db_password
      ADMINS: admin
      JUPYTERHUB_PATH: /notebook/
      DOCKER_NOTEBOOK_IMAGE: scnerd/pythonathon_notebook
      DOCKER_NETWORK_NAME: jupyternet
      DOCKER_HUB_NAME: jupyterhub
    volumes:
      - "./secrets:/secrets:ro"
      - "./oauth:/oauth:rw"
      - "./nb_data:/srv/jupyterhub/notebooks"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        window: 5s
      placement:
        constraints:
          - node.role == manager

  proxy:
    build: proxy
    image: scnerd/pythonathon_proxy
    networks:
      - webnet
      - ctfnet
    environment:
      VIRTUAL_HOST: pythonathon.davidmaxson.name
      LETSENCRYPT_HOST: pythonathon.davidmaxson.name
      LETSENCRYPT_EMAIL: scnerd@gmail.com
      MAIN_HOST: pythonathon
      MAIN_PORT: 3031
      HUB_HOST: jupyterhub
      HUB_PORT: 8000
      HUB_PATH: /notebook/
    depends_on:
      - pythonathon
      - jupyterhub
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        window: 5s

  # Use this to build a custom image to launch
  jupyternotebook:
    build: jupyternotebook
    image: scnerd/pythonathon_notebook
    command: ["echo", "Just need this to build, it doesn't need to run"]
    deploy:
      replicas: 1
      restart_policy:
        condition: none


networks:
  ctfnet:
  jupyternet:
    external:
      name: jupyternet
  webnet:
    external:
      name: webnet
